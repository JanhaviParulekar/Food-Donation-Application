/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HumanResources;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.HumanResourcesOrganization;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import Business.Product.Inventory;
import Business.Product.InventoryItem;
import Business.Product.ProductDefinationList;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DonationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import userInterface.Inventory.InventoryJPanel;
import userInterface.InventoryManagerRole.InventoryManagerWorkAreaJPanel;
import userInterface.ManageDonationsJPanel;

/**
 *
 * @author mahesh
 */
public class InventoryManagerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form InventoryManagerJPanel
     */
  private JPanel userProcessContainer;
  private UserAccount userAccount;
  private Organization organization;
  private Enterprise enterprise;
  private InventoryOrganization inventoryOrganization;
  private Date currentDate;
  private Calendar date1;
  private Calendar date2;
  private ProductDefinationList productDefinationList;
  private Inventory inventory;
  private Ecosystem system;
  

 

    public InventoryManagerJPanel(JPanel userProcessContainer,ProductDefinationList productDefinationList, UserAccount account, InventoryOrganization organization, Enterprise enterprise, Inventory inventory, Ecosystem system) {
         initComponents();
         currentDate=  new Date();
         date1 = new GregorianCalendar();
         date2 = new GregorianCalendar();
              
              SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");

         this.userProcessContainer=userProcessContainer;
         this.userAccount=userAccount;
         this.productDefinationList=productDefinationList;
         this.inventoryOrganization=organization;
         this.enterprise=enterprise;
         this.inventory=inventory;
         System.out.println("value where needed is"+organization);
          System.out.println("check check"+inventoryOrganization);
        // this.donorDirectory=donorDirectory; //To change body of generated methods, choose Tools | Templates.
    }
            



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        LifeReportsJButton = new javax.swing.JButton();
        managedonationsJButton = new javax.swing.JButton();
        jButton = new javax.swing.JButton();

        jButton1.setText("View Inventory");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Inventory Manager Work area ");

        LifeReportsJButton.setText("Life of available Products Report");
        LifeReportsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LifeReportsJButtonActionPerformed(evt);
            }
        });

        managedonationsJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        managedonationsJButton.setText("Manage Doanations");
        managedonationsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managedonationsJButtonActionPerformed(evt);
            }
        });

        jButton.setText("Work Request");
        jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(managedonationsJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(LifeReportsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(365, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(managedonationsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(LifeReportsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButton)
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        InventoryJPanel ijp = new InventoryJPanel(userProcessContainer,enterprise);
        userProcessContainer.add("InventoryJPanel", ijp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void LifeReportsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LifeReportsJButtonActionPerformed
        // TODO add your handling code here:
        populateFields();
    }//GEN-LAST:event_LifeReportsJButtonActionPerformed

    private void managedonationsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managedonationsJButtonActionPerformed
        // TODO add your handling code here:

        ManageDonationsJPanel muajp = new ManageDonationsJPanel(userProcessContainer, enterprise, productDefinationList,inventory);
        userProcessContainer.add("ManageDonationsJPanel", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_managedonationsJButtonActionPerformed

    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Coming here "+organization);
        InventoryManagerWorkAreaJPanel imwajp = new InventoryManagerWorkAreaJPanel(userProcessContainer, userAccount ,inventoryOrganization, system);
        userProcessContainer.add("ManageDonationsJPanel", imwajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButtonActionPerformed

    public int daysBetween(Date d1, Date d2){
             return (int)( (d2.getTime() - d1.getTime()) / (1000 * 60 * 60 * 24));
     }
    
    public void populateFields() {


                        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

            for (InventoryItem i : enterprise.getInventory().getInventoryItemList()) {
                int life;
                date1.setTime(currentDate);
                date2.setTime(i.getExpires());
                life = daysBetween(date1.getTime(), date2.getTime());
                i.setLife(life);

                dataset.setValue(i.getLife(), "Life", i.getProductName());
            }
            
                JFreeChart chart = ChartFactory.createBarChart("Life ofProducts in (Days)", "Name of Products", "", dataset, PlotOrientation.VERTICAL, false, true, false);
                CategoryPlot p = chart.getCategoryPlot();
                p.setRangeGridlinePaint(Color.RED);
                ChartFrame frame = new ChartFrame("BarChart", chart);
                frame.setVisible(true);
                frame.setSize(450, 350);
                
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LifeReportsJButton;
    private javax.swing.JButton jButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton managedonationsJButton;
    // End of variables declaration//GEN-END:variables
}
