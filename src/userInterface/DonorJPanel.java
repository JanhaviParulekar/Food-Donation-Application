/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import Business.DB4OUtil.DB4OUtil;
import javax.swing.JPanel;
import Business.Donor.Donor;
import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.DonorOrganization;
import Business.Organization.Organization;
import Business.Product.Product;
import Business.Product.ProductDefination;
import Business.Product.ProductDefinationList;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import userInterface.Donor.UpdateDonorInventoryJPanel;
import userInterface.DonorRole.DonorWorkAreaJPanel;

/**
 *
 * @author janhavi
 */
public class DonorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form Donar
     */

    private JPanel userProcessContainer;
    private Donor d;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private Ecosystem system;
    private DonorOrganization organization;
    private Enterprise enterprise;
    private ProductDefinationList productDefinationList;
    private UserAccount account;
    private boolean isDonated = false;
    private Employee e;

    public DonorJPanel(JPanel userProcessContainer, UserAccount account, DonorOrganization donorOrganization, Enterprise enterprise, Ecosystem system, ProductDefinationList productDefinationList) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account=account;
        d= (Donor) account.getDonor();
        donorName.setText(d.getName());
        this.organization=donorOrganization;
        this.enterprise=enterprise;
        this.productDefinationList=productDefinationList;
        system = dB4OUtil.retrieveSystem();
        donorComboBox();

       populateTable();

    }

    public void donorComboBox(){
        donarJComboBox1.removeAllItems();
        for(ProductDefination p : productDefinationList.getProductDefinationList()){

            donarJComboBox1.addItem(p);
        }
    }

    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) donarJTable.getModel();
        model.setRowCount(0);
        for(Product p : d.getDonatedItems()){
             if(p.getIsInInventory()==false)
            {
            Object row[] = new Object[4];
            row[0] = p;
            row[1] = p.getQuantity();
            model.addRow(row);
            }
        }
    }
    
    public void refreshTable() {
        int rowCount = donarJTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)donarJTable.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        
        for(Product p : d.getDonatedItems()) {
            if(p.getIsInInventory()==false)
        {
            Object row[] = new Object[3];
            row[0] = p;
            row[1] = p.getQuantity();
            model.addRow(row);
        }
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        donarquantityJTextField = new javax.swing.JTextField();
        addtocartJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        donarJTable = new javax.swing.JTable();
        updateJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();
        donarJComboBox1 = new javax.swing.JComboBox();
        donorName = new javax.swing.JLabel();
        trackDonationJButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setForeground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(donarquantityJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 127, 38));

        addtocartJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addtocartJButton.setText("Add to Cart");
        addtocartJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtocartJButtonActionPerformed(evt);
            }
        });
        add(addtocartJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 330, 225, 30));

        donarJTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        donarJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(donarJTable);
        if (donarJTable.getColumnModel().getColumnCount() > 0) {
            donarJTable.getColumnModel().getColumn(0).setResizable(false);
            donarJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 376, 946, 170));

        updateJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateJButton.setText("Update");
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });
        add(updateJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 180, 34));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Quantity :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 99, 38));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("    Donor Screen");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 176, 47));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Welcome,");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 38));

        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 570, 180, 34));

        removeJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        removeJButton.setText("Remove");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });
        add(removeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 570, 180, 34));

        add(donarJComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 100, 210, 38));
        add(donorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 120, 30));

        trackDonationJButton.setText("Track Your Donation");
        trackDonationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackDonationJButtonActionPerformed(evt);
            }
        });
        add(trackDonationJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 620, 360, -1));

        jButton1.setText("Work Request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 620, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addtocartJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtocartJButtonActionPerformed
        // TODO add your handling code here:
        String quan = donarquantityJTextField.getText();
        if(quan.matches("[0-9]+"))
        {
        ProductDefination productDefination = (ProductDefination) donarJComboBox1.getSelectedItem();
        int i=0;
        for(Product pr: d.getDonatedItems())
        {
        if(pr.getIsInInventory()==false)
        {
        if(productDefination.getProductName().equals(pr.getName()))
        {
            int q = Integer.parseInt(donarquantityJTextField.getText());
            int q1 = pr.getQuantity();
            pr.setQuantity(q1+q);
            i++;
        }
        }
        } 
        if(i==0)
        {
        Product p = d.addProduct();
        p.setName(productDefination.getProductName());
        p.setQuantity(Integer.parseInt(donarquantityJTextField.getText()));
        }
        
        d.setIsSubmitted(false);
        populateTable();
        }
        else {
            JOptionPane.showMessageDialog(null, "Please enter a valid amount", "Information", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_addtocartJButtonActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
        // TODO add your handling code here:
        int row1 = donarJTable.getSelectedRow();
        d.setIsSubmitted(false);

        if(row1<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        Product p = (Product)donarJTable.getValueAt(row1, 0);
        UpdateDonorInventoryJPanel create = new UpdateDonorInventoryJPanel(userProcessContainer, p);
        userProcessContainer.add("UpdateDonarInventoryJPanel", create);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_updateJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        
        if(d.getDonatedItems().size()>0){
        JOptionPane.showMessageDialog(null, "Thankyou for your Donation "+d.getName());
            isDonated = true;
            d.setIsSubmitted(true);                                

        }else{
            JOptionPane.showMessageDialog(null, "Cart is empty", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
                dB4OUtil.storeSystem(system);
                
                
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backAction() {

        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }

    
    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        // TODO add your handling code here:
        int row = donarJTable.getSelectedRow();
        d.setIsSubmitted(false);

        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Product p = (Product)donarJTable.getValueAt(row, 0);
        d.removeProduct(p);
       refreshTable();
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void trackDonationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackDonationJButtonActionPerformed
        // TODO add your handling code here:
      populateFields();
    }//GEN-LAST:event_trackDonationJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DonorWorkAreaJPanel create = new DonorWorkAreaJPanel(userProcessContainer, account, organization, enterprise, system);
        userProcessContainer.add("DonorWorkAreaJPanel", create);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

        public void populateFields() {


            DefaultCategoryDataset dataset = new DefaultCategoryDataset();

            for (Product p : d.getDonatedItems()) {
                
                dataset.setValue(p.getQuantity(), "Donations", p.getName());
                System.out.println(p.getQuantity()+" "+p.getName());
            }
            
                JFreeChart chart = ChartFactory.createBarChart("Donations made by You", "Name of Products", "", dataset, PlotOrientation.VERTICAL, false, true, false);
                CategoryPlot p = chart.getCategoryPlot();
                p.setRangeGridlinePaint(Color.RED);
                ChartFrame frame = new ChartFrame("BarChart", chart);
                frame.setVisible(true);
                frame.setSize(450, 350);
                
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtocartJButton;
    private javax.swing.JComboBox donarJComboBox1;
    private javax.swing.JTable donarJTable;
    private javax.swing.JTextField donarquantityJTextField;
    private javax.swing.JLabel donorName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeJButton;
    private javax.swing.JButton submitJButton;
    private javax.swing.JButton trackDonationJButton;
    private javax.swing.JButton updateJButton;
    // End of variables declaration//GEN-END:variables
}
