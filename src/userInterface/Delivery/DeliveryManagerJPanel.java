/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Delivery;

import Business.Enterprise.Enterprise;
import Business.Organization.DeliveryOrganization;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import static Business.Organization.Organization.Type.Receiver;
import Business.Organization.ReceiverOrganization;
import Business.Product.InventoryItem;
import Business.Receiver.Receiver;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Janhavi
 */
public class DeliveryManagerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryManagerJPanel
     */
  private JPanel userProcessContainer;
  private Enterprise enterprise;
  private UserAccount account;
    private DeliveryOrganization deliveryOrganization;
    private Receiver receiver;


    public DeliveryManagerJPanel(JPanel userProcessContainer, UserAccount account, DeliveryOrganization organization, Enterprise enterprise) {
      //To change body of generated methods, choose Tools | Templates.
      initComponents();
      this.userProcessContainer=userProcessContainer;
      this.enterprise=enterprise;
      this.deliveryOrganization=(DeliveryOrganization) organization;

    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LifeReportsJButton = new javax.swing.JButton();

        LifeReportsJButton.setText("Receiver Delivery time report");
        LifeReportsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LifeReportsJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(LifeReportsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(LifeReportsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void LifeReportsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LifeReportsJButtonActionPerformed
        // TODO add your handling code here:
        populateFields();
    }//GEN-LAST:event_LifeReportsJButtonActionPerformed
    public void populateFields() {


            DefaultCategoryDataset dataset = new DefaultCategoryDataset();

           for(Organization o: enterprise.getOrganizationDirectory().getOrganizationList())
        {
            if(o instanceof ReceiverOrganization)
            {
            for(Receiver r : o.getEmployeeDirectory().getReceiverList()){
  
                

                dataset.setValue(r.getDeliveryTime(), "Delivery Time", r.getName());
                System.out.println(r.getDeliveryTime()+"hi "+r.getName());
            }
            }
        }
                JFreeChart chart = ChartFactory.createBarChart("Quantity of Products", "Name of Products", "", dataset, PlotOrientation.VERTICAL, false, true, false);
                CategoryPlot p = chart.getCategoryPlot();
                p.setRangeGridlinePaint(Color.RED);
                ChartFrame frame = new ChartFrame("BarChart", chart);
                frame.setVisible(true);
                frame.setSize(450, 350);
                
        }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LifeReportsJButton;
    // End of variables declaration//GEN-END:variables
}
